#!/bin/bash

#
# Copyright 2017 Government of Canada - Public Services and Procurement Canada - buyandsell.gc.ca
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

if [[ "${EUID}" -ne 0 ]]
then
    echo "Error: please run ${BASH_SOURCE[0]} as sudo"
    echo
    exit 1
fi

DIR_ROOT="$(readlink -f $(dirname ${BASH_SOURCE[0]}))"
DIR_VON=$(dirname "${DIR_ROOT}")
DIR_FILES="${DIR_ROOT}/files"
OPERATOR=${SUDO_USER}
UBUNTU_VERSION=$(cat /etc/issue | head -1 | awk '{print $2}' | sed -e 's/\..*//')

# prerequisites
if [[ "${UBUNTU_VERSION}" -lt "16" ]]
then
    sudo add-apt-repository -y ppa:chris-lea/libsodium
    sudo add-apt-repository -y ppa:fkrull/deadsnakes
    sudo apt -y update
fi

apt install -y build-essential pkg-config cmake libssl-dev libsqlite3-dev libsodium-dev python3.5 python3-pip
if [[ "${UBUNTU_VERSION}" -lt "16" ]]
then
    apt install -y python-virtualenv
else
    apt install -y virtualenv
fi

# python virtual environment (setup as non-sudo)
sudo -u ${OPERATOR} -i "${DIR_ROOT}/py-venv"

# docker
# apt install -y linux-image-extra-$(uname -r) linux-image-extra-virtual
# apt install -y apt-transport-https ca-certificates curl software-properties-common
# curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
# add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
# apt -y update
# apt -y install docker-ce
# usermod -a -G docker ${OPERATOR}

# build docker network
# INDY_POOL_NETWORK=$(docker network ls --filter name=indy_pool_network | sed '1,1d' | wc -l)
# if [[ "${INDY_POOL_NETWORK}" -eq "0" ]]
# then
    # sudo -u ${OPERATOR} docker network create --subnet 10.0.0.0/8 indy_pool_network
# fi

# build docker image
# INDY_POOL=$(docker images --filter reference=indy_pool | sed '1,1d' | wc -l)
# if [[ "${INDY_POOL}" -eq "0" ]]
# then
    # sudo -u ${OPERATOR} docker build --build-arg pool_ip=10.0.0.2 -f "${DIR_FILES}/indy-pool.dockerfile" -t indy_pool .
# fi

# install libindy.so
# cd "${DIR_FILES}"
# tar -xpvzf libindy.so.tgz &> /dev/null
# mv libindy.so /usr/lib/
