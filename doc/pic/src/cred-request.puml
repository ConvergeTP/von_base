@startuml
/'
Copyright 2017-2018 Government of Canada - Public Services and Procurement Canada - buyandsell.gc.ca

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
'/

skinparam ParticipantPadding 20
skinparam BoxPadding 20

title Credential Request Sequence

box "Indy" #LightBlue
    participant "Ledger" as ledger
endbox

actor "Holder-Prover\n(The Org Book)\nAgent" as obag
actor "Actuator" as ator

=== CREDENTIAL REQUEST SEQUENCE ==
note over ledger, ator
All agent service wrapper APIs are up
Schema, cred defs are on ledger
Cred load sequence has stored creds at Holder-Prover
endnote

alt by components of schema id or cred def id
    ator --> obag: call get_creds_display_coarse(filt)
    obag -> obag: get and filter creds
else by attribute values
    ator --> obag: call get_creds(proof_req, filt)
    obag -> obag: get and filter creds by filt
else by cred id
    obag -> obag: call get_creds_by_id(proof_req, cred_ids)
    obag -> obag: get and filter creds by cred_ids
end
obag -> ator: creds

alt more filtration post-hoc
    ator -> ator: call creds_display(creds, filt)
    ator -> ator: select creds of interest by cred id
    ator -> ator: prune_creds_json(creds, cred_ids)
end
@enduml
