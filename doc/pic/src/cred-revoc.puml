@startuml
/'
Copyright 2017-2018 Government of Canada - Public Services and Procurement Canada - buyandsell.gc.ca

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
'/

skinparam ParticipantPadding 20
skinparam BoxPadding 20

title Credential Revocation Sequence

box "Indy" #LightBlue
    participant "Ledger" as ledger
endbox

actor "Holder-Prover\n(The Org Book)\nAgent" as obag
actor "Issuer\n(BC Registrar)\nAgent" as bcrag
actor "Actuator" as ator

=== CREDENTIAL REVOCATION SEQUENCE ==

note over ledger, ator
All agent service wrapper APIs are up
Schema, cred defs, rev reg defs are on ledger
endnote

ator -> obag: call get_creds()
group get_creds() implements
    obag -> obag: get creds structure
    obag --> ator: creds
end
ator -> ator: call revoc_info(creds, filt)
ator -> ator: choose (rev_reg_id, cred_rev_id)

ator -> bcrag: call revoke_cred(rev_reg_id, cred_rev_id)
group revoke_cred() implements
    bcrag -> bcrag: generate rev reg delta from tails
    bcrag -> ledger: send rev reg entry
    ledger --> bcrag: response
    bcrag -> bcrag: extract transaction time
    bcrag --> ator: (epoch) transaction time
end

@enduml
